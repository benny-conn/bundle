syntax = "proto3";

option go_package = "github.com/bennycio/bundle/api";

package Storage;

service UsersService {
    rpc GetUser (GetUserRequest) returns (User){}
    rpc InsertUser (User) returns (SuccessResponse) {}
    rpc UpdateUser (UpdateUserRequest) returns (SuccessResponse) {}
}


message GetUserRequest {
    string username = 1;
    string email = 2;
    bool withThumbnail = 3;
}

message UpdateUserRequest {
    string username = 1;
    User updatedUser = 2;
}

message User {
    string username = 1;
    string email = 2;
    string password = 3;
    repeated string scopes = 4;
    repeated string plugins = 5;
    string tag = 6;
    bytes thumbnail = 7;
}

service PluginsService {
    rpc GetPlugin (GetPluginRequest) returns (Plugin){}
    rpc InsertPlugin (Plugin) returns (SuccessResponse) {}
    rpc UpdatePlugin (UpdatePluginRequest) returns (SuccessResponse) {}
    rpc PaginatePlugins (PaginatePluginsRequest) returns (PaginatePluginsResponse) {}
    rpc GetPluginData(GetPluginDataRequest) returns (Plugin) {}
    rpc InsertPluginData(InsertPluginDataRequest) returns (SuccessResponse) {}
}


message GetPluginRequest {
    string name = 1;
}

message GetPluginDataRequest {
    string name = 1;
    string version = 2;
    bool withPlugin = 3;
    bool withReadme = 4;
    bool withThumbnail = 5;
}

message InsertPluginDataRequest {
    Plugin plugin = 1;
    User author = 2;
    enum DataType {
        PLUGIN = 0;
        README = 1;
        THUMBNAIL = 2;
    }
    DataType dataType = 3;
}

message UpdatePluginRequest {
    string name = 1;
    Plugin updatedPlugin = 2;
}

message PaginatePluginsRequest {
    int32 page = 1;
}

message PaginatePluginsResponse {
    repeated Plugin plugins = 1;
}

message Plugin {
    string name = 1;
    string author = 2;
    string version = 3;
    string description = 4;
    bytes pluginData = 5;
    string readme = 6;
    bytes thumbnail = 7;
    int64 lastUpdated = 8;
}

message SuccessResponse {
    bool success = 1;
}

